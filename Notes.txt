Transaction type: JTA or RESOURCE_LOCAL?
  Set in persistence.xml.
  - RESOURCE_LOCAL: you must manage transactions (e.g. with Tomcat) 
  - JTA: container managed, usually preferable with EJB.
  A good article: http://www.adam-bien.com/roller/abien/entry/don_t_use_jpa_s.

GeneratedValue and AUTO_INCREMENT:
  From https://stackoverflow.com/questions/4102449/how-to-annotate-mysql-autoincrement-field-with-jpa-annotations
    - @Id @GeneratedValue(strategy=GenerationType.IDENTITY)  // with MySQL, this is the default, should work
      private Long id;
        // Hibernate should not generate the ID field in SQL
    - The Hibernate dialect should be MySQL5InnoDBDialect or MySQL5Dialect.

persist() or merge()
  Discussion: https://stackoverflow.com/questions/1069992/jpa-entitymnager-why-use-persist-over-merge?rq=1
    persist() - inserts a new entity to the database (cannot be used for update)
              - attaches the object to the Entity Manager   
    merge()   - find an attached object with the same id and update it
                  If exists update and return the already attached object.
                  If doesn't exist insert the new register to the database.

Getting the real SQL error
  - in persistence.xml:
        <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
        <property name="hibernate.show_sql" value="true" />
        <property name="hibernate.format_sql" value="true"/>
        <property name="hibernate.hbm2ddl.auto" value="update"/>
  - BTW, hbm2ddl.auto  "create": create new items ANYWAY   "update": create if not there yet.
  - when logging the SQL exception, also log e.getCause().getMessage().
